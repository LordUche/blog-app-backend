{"version":3,"sources":["components/NavBar.jsx","pages/AboutPage.jsx","components/ArticlesList.jsx","pages/ArticleListPage.jsx","components/AddCommentForm.jsx","components/CommentList.jsx","components/Upvote.jsx","pages/NotFoundPage.jsx","pages/ArticlePage.jsx","pages/HomePage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["NavBar","NavBarStyles","to","styled","nav","AboutPage","ArticlesList","articles","ArticleListStyles","map","title","slug","content","key","substring","ul","ArticleListPage","useState","setArticles","useEffect","a","fetch","res","json","data","console","log","fetchArticles","fallback","AddCommentForm","setArticle","username","setUsername","text","setText","e","preventDefault","headers","method","body","JSON","stringify","AddCommentFormStyles","onSubmit","type","value","onChange","currentTarget","rows","form","CommentList","comments","Upvote","upvotes","article","onClick","NotFoundPage","ArticlePage","match","params","fetchArticle","paragraph","HomePage","App","className","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f35914f3.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nfunction NavBar() {\n  return (\n    <NavBarStyles>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n        <li>\n          <Link to=\"/articles\">Articles</Link>\n        </li>\n      </ul>\n    </NavBarStyles>\n  )\n}\n\nexport default NavBar\n\nconst NavBarStyles = styled.nav`\n  position: fixed;\n  width: 100vw;\n  z-index: 2;\n  border-bottom: 3px solid black;\n  background-color: white;\n\n  ul {\n    display: flex;\n    justify-content: center;\n    line-height: 3rem;\n  }\n\n  a {\n    font-weight: bold;\n    display: block;\n    padding: 0 1rem;\n\n    &:hover,\n    &:active,\n    &:focus {\n      background-color: black;\n      color: white;\n    }\n  }\n`\n","import React from 'react'\n\nfunction AboutPage() {\n  return (\n    <>\n      <h1>This is the about page</h1>\n      <p>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestiae neque laborum modi quaerat? Aut, debitis\n        nisi. Mollitia labore est repudiandae dolorem repellat. Obcaecati earum repellendus cumque expedita sint aliquam\n        dicta.\n      </p>\n    </>\n  )\n}\n\nexport default AboutPage\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nfunction ArticlesList({ articles = [] }) {\n  return (\n    <ArticleListStyles>\n      {articles.map(({ title, slug, content }) => {\n        return (\n          <li key={slug}>\n            <h3>\n              <Link to={`/articles/${slug}`}>{title}</Link>\n            </h3>\n            <p>{content[0].substring(0, 150)}â€¦</p>\n          </li>\n        )\n      })}\n    </ArticleListStyles>\n  )\n}\n\nexport default ArticlesList\n\nconst ArticleListStyles = styled.ul`\n  li {\n    border-bottom: 2px solid black;\n    padding: 1rem 0;\n  }\n  li + li {\n    margin-top: 2rem;\n  }\n`\n","import React, { Suspense, useEffect, useState } from 'react'\nimport ArticlesList from '../components/ArticlesList'\n\nfunction ArticleListPage() {\n  const [articles, setArticles] = useState([])\n\n  useEffect(() => {\n    async function fetchArticles() {\n      try {\n        const res = await fetch(`/api/articles`)\n        const data = await res.json()\n        setArticles(data.articles)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    fetchArticles()\n    return () => {}\n  }, [])\n\n  return (\n    <>\n      <h1>This is the article list page</h1>\n      <Suspense fallback={<p>Loading...</p>}>\n        <ArticlesList articles={articles} />\n      </Suspense>\n    </>\n  )\n}\n\nexport default ArticleListPage\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nfunction AddCommentForm({ slug, setArticle }) {\n  const [username, setUsername] = useState('')\n  const [text, setText] = useState('')\n\n  async function onSubmit(e) {\n    e.preventDefault()\n    const res = await fetch(`/api/articles/${slug}/comment`, {\n      headers: { 'Content-type': 'application/json' },\n      method: 'POST',\n      body: JSON.stringify({ username, text })\n    })\n    const data = await res.json()\n    setArticle(data)\n    setUsername('')\n    setText('')\n  }\n\n  return (\n    <AddCommentFormStyles onSubmit={onSubmit}>\n      <h3>Add Comment</h3>\n      <label>\n        Name:\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.currentTarget.value)} />\n      </label>\n      <label>\n        Comment:\n        <textarea rows=\"4\" value={text} onChange={(e) => setText(e.currentTarget.value)}></textarea>\n      </label>\n      <button>Add Comment</button>\n    </AddCommentFormStyles>\n  )\n}\n\nexport default AddCommentForm\n\nconst AddCommentFormStyles = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  label {\n    display: flex;\n    flex-direction: column;\n  }\n\n  input,\n  textarea {\n    display: block;\n  }\n`\n","import React from 'react'\n\nfunction CommentList({ comments = [] }) {\n  return (\n    <>\n      {comments.map(({ username, text }, key) => (\n        <div key={key}>\n          <h4>{username}</h4>\n          <p>{text}</p>\n        </div>\n      ))}\n    </>\n  )\n}\n\nexport default CommentList\n","import React from 'react'\n\nfunction Upvote({ upvotes, slug, setArticle }) {\n  async function upvote() {\n    const res = await fetch(`/api/articles/${slug}/upvote`, {\n      method: 'PATCH'\n    })\n    const article = await res.json()\n    setArticle(article)\n  }\n\n  return (\n    <>\n      <button onClick={upvote}>Add Upvote</button>\n      <small>This post has been upvoted {upvotes || 0} times</small>\n    </>\n  )\n}\n\nexport default Upvote\n","import React from 'react'\n\nfunction NotFoundPage() {\n  return (\n    <>\n      <h1>Page Not Found!</h1>\n    </>\n  )\n}\n\nexport default NotFoundPage\n","import React, { Suspense, useEffect, useState } from 'react'\nimport AddCommentForm from '../components/AddCommentForm'\nimport CommentList from '../components/CommentList'\nimport Upvote from '../components/Upvote'\nimport NotFoundPage from './NotFoundPage'\n\nfunction ArticlePage({ match }) {\n  const { slug } = match.params\n  const [article, setArticle] = useState({ title: '', content: [] })\n\n  useEffect(() => {\n    async function fetchArticle() {\n      try {\n        const res = await fetch(`/api/articles/${slug}`)\n        const data = await res.json()\n        if (data) setArticle(data)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    fetchArticle()\n    return () => {}\n  }, [slug])\n\n  if (!article) return <NotFoundPage />\n\n  const { title, content } = article\n\n  return (\n    <>\n      <Suspense fallback={<p>Loading...</p>}>\n        <h1>{title}</h1>\n        <Upvote upvotes={article.upvotes} slug={slug} setArticle={setArticle} />\n        {content.map((paragraph, key) => (\n          <p key={key}>{paragraph}</p>\n        ))}\n        <section>\n          <h2>Comments:</h2>\n          <CommentList comments={article.comments} />\n          <AddCommentForm slug={slug} setArticle={setArticle} />\n        </section>\n      </Suspense>\n    </>\n  )\n}\n\nexport default ArticlePage\n","import React from 'react'\n\nfunction HomePage() {\n  return (\n    <>\n      <h1>Welcome to my blog!</h1>\n      <p>\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Expedita alias doloribus error, quam ut similique.\n        Amet ratione pariatur totam quae quis, illum aliquam provident blanditiis perspiciatis consectetur doloremque ex\n        aspernatur.\n      </p>\n      <p>\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quo asperiores placeat delectus ipsam voluptates odit,\n        aspernatur ab temporibus! Numquam culpa in totam temporibus maiores maxime deserunt provident. Cum, sapiente\n        harum?\n      </p>\n      <p>\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Minima fugiat ducimus, nesciunt harum hic quaerat\n        provident cum tempora dolorum voluptates debitis ipsa illum esse cupiditate inventore repellat similique id\n        alias!\n      </p>\n    </>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport './App.css'\nimport NavBar from './components/NavBar'\nimport AboutPage from './pages/AboutPage'\nimport ArticleListPage from './pages/ArticleListPage'\nimport ArticlePage from './pages/ArticlePage'\nimport HomePage from './pages/HomePage'\nimport NotFoundPage from './pages/NotFoundPage'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <main className=\"page-body\">\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/about\" exact component={AboutPage} />\n            <Route path=\"/articles\" exact component={ArticleListPage} />\n            <Route path=\"/articles/:slug\" component={ArticlePage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'normalize.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}